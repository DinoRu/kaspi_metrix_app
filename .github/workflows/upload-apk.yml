name: Build and Upload APK to Beget S3

on:
  push:
    tags:
      - 'v*.*.*' # déclenche uniquement pour les tags commençant par "v", ex: v1.2.0
  # Ou bien pour publier uniquement lors d'une release :
  # release:
  #   types: [published]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java (AGP requires Java 17+)
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17' # change to 21 if you upgrade AGP later

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.35.3' # ✅ corrigé (pas d’espace)
          channel: 'stable'
          cache: true

      - name: Get Flutter dependencies
        run: flutter pub get

      - name: Update Flutter dependencies
        run: flutter pub upgrade

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: 'upload-keystore.jks'
          encodedString: ${{ secrets.KEYSTORE_FILE }}

      - name: Move keystore into android/app
        run: |
          mkdir -p android/app
          mv "${{ steps.android_keystore.outputs.filePath }}" "android/app/upload-keystore.jks"
          ls -la android/app

      - name: Create key.properties
        run: |
          cat > android/key.properties <<'EOF'
          storePassword=${{ secrets.KEY_PASSWORD }}
          keyPassword=${{ secrets.KEY_PASSWORD }}
          keyAlias=${{ secrets.KEY_ALIAS }}
          storeFile=upload-keystore.jks
          EOF
          echo "== key.properties =="
          cat android/key.properties

      - name: Sanity check files
        run: |
          pwd
          ls -la android
          ls -la android/app
          test -f android/app/upload-keystore.jks || (echo "Keystore missing" && exit 1)

      - name: Build APK
        run: flutter build apk --release
        # Output : build/app/outputs/flutter-apk/app-release.apk

      - name: Configure AWS CLI (S3-compatible)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BEGET_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BEGET_S3_SECRET_KEY }}
          AWS_EC2_METADATA_DISABLED: 'true'
        run: |
          aws --version
          mkdir -p ~/.aws
          aws configure set region ru-1
          aws configure set s3.signature_version s3v4
          aws configure set s3.addressing_style path

      - name: Upload APK to Beget S3 (s3api)
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.BEGET_S3_ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.BEGET_S3_SECRET_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          AWS_EC2_METADATA_DISABLED: 'true'
          ENDPOINT: ${{ secrets.BEGET_S3_ENDPOINT_URL }}
          BUCKET: ${{ secrets.BEGET_S3_BUCKET_NAME }}
        run: |
          set -euo pipefail
          # retire un éventuel slash final (cause fréquente du bug)
          ENDPOINT="${ENDPOINT%/}"

          VERSION=${GITHUB_REF_NAME#v}
          FILE=build/app/outputs/flutter-apk/app-release.apk
          DEST="apk/my_app_v${VERSION:-latest}.apk"

          [ -n "$ENDPOINT" ] || { echo "ENDPOINT manquant"; exit 1; }
          [ -n "$BUCKET" ]   || { echo "BUCKET manquant"; exit 1; }
          [ -f "$FILE" ]     || { echo "APK introuvable: $FILE"; exit 1; }

          echo "Uploading → s3://$BUCKET/$DEST"
          aws s3api put-object \
            --bucket "$BUCKET" \
            --key "$DEST" \
            --body "$FILE" \
            --acl public-read \
            --endpoint-url "$ENDPOINT"

          echo "✅ Upload OK"
          echo "URL (path-style): $ENDPOINT/$BUCKET/$DEST"
          echo "URL (virtual-hosted): https://$BUCKET.${ENDPOINT#https://}/$DEST"
